apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ukur.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "ukur.name" . }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        prometheus.io/path: /internal/health/scrape
        prometheus.io/port: '8080'
        prometheus.io/scrape: 'true'
      labels:
        {{- include "common.labels" . | indent 8 }}
    spec:
      containers:
        - env:
            - name: JAVA_OPTIONS
              value: -server -Xmx{{ .Values.resources.xmx }} -Dspring.config.location=/etc/application-config/application.properties
                -Dfile.encoding=UTF-8
            - name: TZ
              value: Europe/Oslo
            - name: DATASTORE_PROJECT_ID
              value: {{ .Values.env.datastore.project_id }}
          image: {{ .Values.image.identifier }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /internal/health/live
              port: {{ .Values.service.http.internalPort }}
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 60
          name: ukur
          ports:
            - containerPort: {{ .Values.service.http.internalPort }}
              name: http
              protocol: TCP
            - containerPort: 8778
              name: jolokia
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /internal/health/ready
              port: {{ .Values.service.http.internalPort }}
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 60
          resources:
            limits:
              cpu: {{ .Values.resources.cpuLimit }}
              memory: {{ .Values.resources.memLimit }}
            requests:
              cpu: {{ .Values.resources.cpuRequest }}
              memory: {{ .Values.resources.memRequest }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop: [ALL]
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/application-config
              name: application-config
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      serviceAccountName: application
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
        - maxSkew: 3
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{ .Release.Name }}
        - maxSkew: 5
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{ .Release.Name }}
      volumes:
          - configMap:
              defaultMode: 420
              name: ukur-config
            name: application-config